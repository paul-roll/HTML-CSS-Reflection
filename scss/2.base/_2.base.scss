// ==========================================================================
// Base Styles
// ==========================================================================
* {
    box-sizing: border-box;
}

html {
    font-family: 'Poppins', sans-serif;
    letter-spacing: 0.4px;
    // font-size: 1em; // 16px
    overflow: hidden;
    height: 100%;
}

body {
    overflow:auto;
    height: 100%;
    &.scroll-lock {
        overflow-y: hidden;
    }
}


#page {
    &::before {
        content: "";
        opacity: 0;
        transition: opacity 0.5s;
    }
    &.lock::before {
        background: black;
        opacity: 0.4;
        position: fixed;
        top: 0;
        left: 0;
        height: 100vh;
        width: 100vw;
        z-index: 3;
    }
    &.tint::before {
        @extend .lock::before;
        cursor: pointer;
    }

}


h1 {
    font-size: 2.625em; // 42px
    font-weight: 600;
}
h2 {
    font-size: 2.125em; // 34px
    font-weight: 600;
}
h3 {
    font-size: 1.375em; // 22px
    font-weight: 400;
}
h4 {
    font-size: 1em; // 16px
    font-weight: 400;
}
p {
    font-size: 0.8125em; // 13px;
    font-weight: 400;
}


a {
    padding: 0;
    width: inherit;
    color: inherit;
    text-decoration: none;
    &:hover {
        text-decoration: underline;
    }
}

.wrapper {
    padding: 15px;
    margin: 0 auto;
    @media (min-width: $breakpoint-sm) {
        max-width: $wrapper-sm;
    }
    @media (min-width: $breakpoint-md) {
        max-width: $wrapper-md;
    }
    @media (min-width: $breakpoint-lg) {
        max-width: $wrapper-lg;
    }
}

.wrapper90pc {
    width: 90%;
    margin: auto;
}

ul {
    padding: 0;
}
li {
    list-style-type: none;
}

:focus {        // change the default style for selected objects to a 1px dotted line.
    outline: 1px dotted;
}

input[type=text], textarea {      // style all the input text boxes
    width: 100%;
    padding: 5px 15px;
    font-size: 0.875em; // 14px
    line-height: 1.375em; // 22px
    border: 1px solid lighten($color-grey, 20%);
    color: darken($color-grey, 30%);
    box-shadow: inset 0 0 1px 1px rgba(0,0,0,.075);
    &:focus {    // when input text boxes are selected
        outline: none;      // remove the default dotted outline
        &:not(.wide-search) {      //excludes the .wide-search class
            border: 1px solid $color-viking;    // blue edge glow
            box-shadow: 0 0 10px 1px rgba($color-viking,.75);
        }
    }
}


.checkboxwrapper {
    display: flex;
    #checkbox {             // style the checkbox
        display: none;
    }

    #checkbox + *::before {
        cursor: pointer;
        margin-right: 20px;
        padding: 5px;
        content: "";
        display: inline-block;
        width: 1rem;
        height: 1rem;
        border-radius: 3px;
        border-style: solid;
        border-width: 3px;
        border-color: $color-tuna;
    }

    #checkbox:checked + *::before {
        content: "\f00c";
        color: white;
        text-align: center;
        background: $color-tuna;
        border-color: $color-tuna;
      }
      #checkbox:checked + * {
        color: $color-tuna;
      }

    .checkbox-label {
        cursor: pointer;
        flex: 1 0;      // make the label dynamic so that the checkbox size can remain fixed.
        a {
            text-decoration: underline;
        }
    }
}

label.required::after {      // inject a rose asterix after the labels with a required class
    content: ' *';
    color: $color-chestnut-rose;
}


.hidden {       // Hide at screen width 1+
    display: none;
}

.hide-sm {      // Hide at screen width 768+
    @media (min-width: $breakpoint-sm) {
        display: none;
    }
}
.show-sm {      // Show (inherit) at screen width 768+
    @media (min-width: $breakpoint-sm) {
        display: block;
    } 
}

.hide-md {      // Hide at screen width 992+
    @media (min-width: $breakpoint-md) {
        display: none;
    } 
}
.show-md {      // Show (inherit) at screen width 992+
    @media (min-width: $breakpoint-md) {
        display: block;
    } 
}

.hide-lg {      // Hide at screen width 1260+
    @media (min-width: $breakpoint-lg) {
        display: none;
    } 
}
.show-lg {      // Show (inherit) at screen width 1260+
    @media (min-width: $breakpoint-lg) {
        display: block;
    }   
}